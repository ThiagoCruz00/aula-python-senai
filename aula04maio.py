# -*- coding: utf-8 -*-
"""Aula04Maio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QzNcb0ofL6_cP8ytPRJc9MqQOReNFQpW

# ESTRUTURAS COMPLEXAS EM PYTHON - CONTAINERS
> Tuplas

>Listas

>Dicionários

# Tuplas

A tupla é um tipo de container que agrupa um conjunto de elementos.

Usamos parênteses para a sua criação e separamos os elementos por vírgulas.

Tuplas são imutáveis,ou seja, não podem ser modificadas
"""

# Minha primeira tupla
# Crie uma tupla de exemplo com os elementos:
# Donuts,Sonho,Pretzel,Chocolate,Bala de goma

padaria = ('Donuts','Sonho','Pretzel','Chocolate','Bala de goma') # Nossa tupla
print(padaria)

print(type(padaria))

total = len(padaria)
print(f'A tupla padaria tem {total} elementos') # Exibindo info ao usuário

"""Tuplas são imutáveis.

Após a sua criação não conseguimos mododificar seus elementos.
"""

# Tuplas são imutáveis

print(padaria)
print()
print(padaria[0])  # Acessar o elemento de índidce 0
print(padaria[1])  # Acessar o elemento de índidce 1
print(padaria[2])  # Acessar o elemento de índidce 2
print(padaria[3])  # Acessar o elemento de índidce 3
print(padaria[4])  # Acessar o elemento de índidce 4

# Alterando um elemento da tupla

padaria [0] = 'Muffin'

# Como podemos alterar

print('A tupla antes de mudar:')
print(padaria)
print()

padaria = ('Chiclete','Sorvete','Pizza','Pão de queijo','Bolo')
print()
print('A tupla padaria depois da alteração:')
print()
print(padaria)

"""# Operações em tuplas

> Alterar pelos elementos

> Ordenar

> Contar os elementos

> Indexar
"""

# @title Operações em tuplas - Iterar pelos elementos

for goroh in padaria:
    print(goroh)

# @ title Operações em tuplas - Ordenar - Sort

print('Inicio do programa...\n')
print(f'A tupla padaria antes de ordenar é {padaria}.')
em_ordem = sorted(padaria)
print(em_ordem)
print('\nFim do prograna...')

# @title Operações em tuplas - Contar elementos

print('Inicio do programa...\n')
print(padaria)
repetida = padaria.count('Pizza')
print(f'A palavra Pizza, foi achada {repetida} vezes em padaria')
print('\nFim do programa...')

# @title Operações em tuplas - Indexar

print('Inicio do programa...\n')
aperitivo  = padaria[2] # Elemento escolhido
ondeesta = padaria.index(aperitivo)
print(f'O elemento {aperitivo} está na posição {ondeesta} da tupla.')

print('\nFim do Programa...')

"""# Juntando tudo : repetição, tuplas

Crie um programa que itera por todas os elementos de uma tupla e

exibe cada elemento e a sua posição na tupla
"""

# O elemnto Chiclete de padaria está na posição 0 da tupla.

print('Inicio de programa...\n')
padaria = ('Chiclete','Sorvete','Pizza','Pão de queijo','Bolo')
for l in range(0, len(padaria)):
    print('O elemento %s de padaria esta na posição %i da tupla' % (padaria[l], l))
print('\nFim de programa...')

print('Inicio\n')

for comida in padaria:
    onde = padaria.index(comida)
    print(f'O elemento {comida} de padaria está na posição {onde} da tupla')

print('\nFim')

"""# Tuplas englobam dados de tipos diferentes"""

# Um exemplo abragetnte

pessoa = ('Carlos', 'M', 60, 1.73, 82, True)
outrapessoa = ('Onofre','M',33,1.89,121,False)

print(pessoa)
del(outrapessoa)

"""# Listas

A lista é um container que agrupa um conjunto de elementos,

acessórios pelo seu índice.

Listas são mutáveis, ou seja, podem ser modificadas

Listas podem conter zero ou mais elementos de um mesmo tipo

ou de tipos diferentes, incluindo outras listas
"""

# @title Criando nossa primeira lista

 L =[] # Nossa primeira lista
print(f'A lista L é {L}')
print()
print(f'O comprimeiro de L é {len(L)}')
print()
print(f'O tipo de L é{type(L)}')

# @title Alterando conteúdo em uma lista

Z = [15,8.3, 900, -34] # Nossa lista de exemplo
print(Z) # Exibe a lista original
print()
print(Z[0]) # Exibe o elemneto 0 da lista
print(Z[1]) # Exibe o elemneto 1 da lista
print(Z[2]) # Exibe o elemneto 2 da lista
print(Z[3]) # Exibe o elemneto 3 da lista

Z[0]= 'João'
print(Z)

"""Cuidados com a lista"""

# Cuidados com as listas - cópias

lista_A =[1,2,3,4,5,6] # lista original
lista_B = lista_A # uma "cópia" da lista original

print(lista_A)
print(lista_B)

lista_B[0] = 20 # alterando um valor da lista
print('lista_B:', lista_B)
print('lista_A:',lista_A)

# Declarando uma cópia da lista

lista_C = lista_A[:] # Declarando uma cópia da lista_A
print('lista_A:',lista_A)
print('lista_C:',lista_C)
print()
lista_C[0]= 15
print('lista_A:',lista_A)
print('lista_C:',lista_C)

"""# Operações com listas"""

# @title Operações com listas - Interação

lanche_saudavel = ['Alface','Folha de Louro','Almeirão','Chicória','Rúcula','Repolho']
print('Ai que fome!\n')
for folha in lanche_saudavel:
    print(folha)
print('\nUfa! Estou satisfeito!')

# @title Operações com listas - Ordenar e reverter

print('Inicio...\n')
item = [2,3,5.5,-0.4,9,7,7,7,7,7,7,39]
print(f'Antes de ordernar: {item}')
print()
item.sort()   # Ordenando a lista
print(f'A lista ordenada: {item}')
print()
item.reverse()  # Ordenando ao contrário
print(f'A lista revertida: {item}')

# @title Operações com listas - Contar

contar = item.count(7)
print(f'O número de elementos 7 em item é: {contar}')

# @title Operações com listas - Concatenar

mais_item = [3,5,2.34,2,123,232112]
bando = item + mais_item
print(bando)

bando2 = mais_item + item
print(bando2)

# @title Adição de um novo elemento na lista

item.reverse()
item.append(45)  # Adiciona ultima posição da lista
print(item)

# Exemplo interativo
print(item)
print()
numero = input('Qual o número para adicionar?')
item.append(numero)
print(item)

# @title Inserindo em uma posição específica

print(item)
item.insert(4,10)  # Insere na posição 4(indice) o valor 10
print(item)

# @title Apagando um elemento

print(item)
item.remove('12')
print(item)

del item[:]
print(item)

# Um outro jeito de apagar uma lista

bando2.clear()
print(bando2)

"""Juntando tudo:

Crie um programa que pesquise se um número

existe em uma listagem.

Exiba a mensagem correspondente.
"""

I = [3,2,21,234,12,122]
G = float(input('Digite um número para pesquisar:'))
if I == G:
    print('Esse número consta na lista')
else:
    print('Esse número não consta na lista')

# Exemplo de código agrupando tudo

print('Inicio...\n')
jk = [7,4,123,542,2,43,12,1090] # A lista original
p = float(input('Digite um número para pesquisar:'))
for n in jk:
    if n == p:
        print(f'O número {p} consta na lista')
        break
else:
    print(f'O número {p} não consta na lista')
print('\nFim...')